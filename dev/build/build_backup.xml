<project name="common" default="compile" xmlns:sonar="antlib:org.sonar.ant">

  <property name="pack.name" value="common"/>
  <property name="pack.version" value="5-0-0"/>

  <property name="vobs.plat" value="/proj/eiffel013_config_fem6s11/eiffel_home/jobs/Git_common_build"/>
  <property name="vobs.3pp" value="/proj/eiffel013_config_fem6s11/3pp"/>

  <!-- Attention! pack.dir have to be under tmp-dir because the actual build is done there --> 
  <property name="pack.dir" value="${vobs.plat}/common_utilities/dev"/>

  <!-- ENIQ Jars -->
  <property name="eniq.repository.dir" value="${vobs.plat}/repository/build/repository/"/>
  <property name="eniq.tp_ide.dir" value="${vobs.plat}/tp_ide/build/tp_ide/" />
  <property name="eniq.table_tree_component.dir" value="${vobs.plat}/table_tree_component/build/table_tree_component" />
	
  <!-- 3PP Jars -->
  <property name="3pp.velocity.dir" value="${vobs.3pp}/apache/jakarta_velocity/v1_7/prod"/>
  <property name="3pp.jsch.dir" value="/proj/eiffel013_config_fem6s11/3pp/jsch_ssh2/jsch_ssh2/v0_1_54/prod/" />
  <property name="3pp.commonslogging.dir" value="/proj/eiffel013_config_fem6s11/3pp/apache/comm_logging/v1_2/prod/" />

  <target name="precompile"/>
  
  <target name="compile">
    <mkdir dir="${pack.dir}/classes"/>
    <javac srcdir="${pack.dir}/src" destdir="${pack.dir}/classes"
           failonerror="true"
           debug="true"
           deprecation="off">
<compilerarg value="-Xlint:all" />
      <classpath>
		<fileset dir="${3pp.velocity.dir}">
      	  <include name="**/*.jar"/>
        </fileset>
        <fileset dir="${3pp.jsch.dir}">
      	  <include name="**/*.jar"/>
        </fileset>
        <fileset dir="${3pp.commonslogging.dir}">
      	  <include name="**/*.jar"/>
        </fileset>
		<fileset dir="${eniq.repository.dir}">
			<include name="**/*.jar"/>
		</fileset>
      </classpath>
    </javac>
  </target>

  <target name="postcompile">
	<copy todir="${pack.dir}/classes">
		<fileset dir="${pack.dir}/jar">
			<include name="*/**" />
		</fileset>
	</copy>
  	
  	<!-- techpackide for afj- and ebsmanagers are installed with common package --> 
	<copy file="${eniq.tp_ide.dir}/techpackide.jar" todir="${pack.dir}/dclib" />
	<copy file="${eniq.table_tree_component.dir}/tableTree.jar" todir="${pack.dir}/dclib" />
  </target>

  <!-- ========= Define the main properties of this project ========= -->
  <property name="src.dir" value="src" />
  <property name="build.dir" value="target" />
  <property name="classes.dir" value="${build.dir}/classes" />

  <!-- Define the SonarQube global properties (the most usual way is to pass these properties via the command line) -->
  <property name="sonar.host.url" value="https://sonarqube.lmera.ericsson.se" />

  <!-- Define the Sonar properties -->
  <property name="sonar.projectKey" value="sonarqube-scanner-common" />
  <property name="sonar.projectName" value="Eniq Common" />
  <property name="sonar.projectVersion" value="1.0" />
  <property name="sonar.sources" value="/proj/eiffel013_config_fem6s11/eiffel_home/jobs/Git_common_build/common_utilities/dev/src" />
  <property name="sonar.java.binaries" value="/proj/eiffel013_config_fem6s11/eiffel_home/jobs/Git_common_build/common_utilities/dev" />
  <property name="sonar.sourceEncoding" value="UTF-8" />
  <property name="sonar.login" value="b140730794b2b53dc841840498358c11213d3ba9" />
  <property name="sonar.projectBaseDir" value="/proj/eiffel013_config_fem6s11/eiffel_home/jobs/Git_common_build/common_utilities/dev" />

  <target name="compile_sonar">
      <javac srcdir="${pack.dir}/src" destdir="${pack.dir}/classes" fork="true" debug="true" includeAntRuntime="false" />
  </target>

  <!-- ========= Define SonarQube Scanner for Ant Target ========= -->
  <target name="sonar">
      <taskdef uri="antlib:org.sonar.ant" resource="org/sonar/ant/antlib.xml">
          <!-- Update the following line, or put the "sonar-ant-task-*.jar" file in your "$HOME/.ant/lib" folder -->
          <classpath path="/proj/esjkadm100/Sonar/sonarqube-ant-task-2.7.0.1612.jar" />
      </taskdef>

      <!-- Execute SonarQube Scanner for Ant Analysis -->
      <sonar:sonar />
  </target>
    <target name="clean">
        <delete dir="${pack.dir}/classes"/>
    </target>

  <!-- ========= The main target "all" ========= -->
  <target name="all_sonar" depends="sonar,clean" />



<target name="sonarQualityCheck" description="SonarQube Quality Gate check"> 
	 <exec executable="/bin/sh" outputproperty="qualitySleep"> 
		 <arg value="-c" /> 
		 <arg value="sleep 60" /> 
	 </exec>
	<exec executable="curl" outputproperty="sonarreturnCode">
		<arg value="-o" />
		<arg value="/proj/esjkadm100/Sonar/sonarOut.txt" />
		<arg value="-k" />
        <arg value="-u" />
        <arg value="${sonar.login}:" />
        <arg value="https://sonarqube.lmera.ericsson.se/api/qualitygates/project_status?projectKey=${sonar.projectKey}" />
    </exec>
    <exec executable="/bin/sh" outputproperty="sonarCode">
        <arg value="-c" />
        <arg value="/proj/eiffel013_config_fem6s11/tools/sonarQualityGateCheck.sh" />
    </exec>
    <echo message="Quality report returned ${sonarCode}"/>
    <condition property="qualityMatch">
        
            <equals arg1="${sonarCode}" arg2="ERROR"/>
        
    </condition>
    <fail if="qualityMatch" message="Quality check did not pass, hence marking build as failed!!!."/>
</target>

</project>
